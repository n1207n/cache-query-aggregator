volumes:
  postgres_data:
  redis_data_1:
  redis_data_2:
  redis_data_3:
  redis_data_4:
  redis_data_5:

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.18.0.0/24

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    ports:
      - "${APP_PORT:-8080}:${APP_PORT:-8080}"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis-1:
        condition: service_started
    networks:
      app-network:
        ipv4_address: 173.18.0.10
  db:
    image: postgres:16-alpine
    ports:
      - "${POSTGRES_HOST_PORT:-127.0.0.1:5432}:${POSTGRES_PORT:-5432}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-mydatabase}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-user} -d $${POSTGRES_DB:-mydatabase}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      app-network:
        ipv4_address: 173.18.0.11

  redis-1:
    image: redis:6.2.19-alpine
    command: redis-server --port 6379 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 60000 --appendonly yes
    ports:
      - "7001:6379"
    volumes:
      - redis_data_1:/data
    networks:
      app-network:
        ipv4_address: 173.18.0.2

  redis-2:
    image: redis:6.2.19-alpine
    command: redis-server --port 6379 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 60000 --appendonly yes
    ports:
      - "7002:6379"
    volumes:
      - redis_data_2:/data
    networks:
      app-network:
        ipv4_address: 173.18.0.3

  redis-3:
    image: redis:6.2.19-alpine
    command: redis-server --port 6379 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 60000 --appendonly yes
    ports:
      - "7003:6379"
    volumes:
      - redis_data_3:/data
    networks:
      app-network:
        ipv4_address: 173.18.0.4

  redis-4:
    image: redis:6.2.19-alpine
    command: redis-server --port 6379 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 60000 --appendonly yes
    ports:
      - "7004:6379"
    volumes:
      - redis_data_4:/data
    networks:
      app-network:
        ipv4_address: 173.18.0.5

  redis-5:
    image: redis:6.2.19-alpine
    command: redis-server --port 6379 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 60000 --appendonly yes
    ports:
      - "7005:6379"
    volumes:
      - redis_data_5:/data
    networks:
      app-network:
        ipv4_address: 173.18.0.6